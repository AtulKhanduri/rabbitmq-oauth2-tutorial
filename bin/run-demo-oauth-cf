#!/usr/bin/env bash

CLIENT_ID=${1:?First parameter must be the client_id}
CLIENT_SECRET=${2:?Second parameter must be the client_secret}

read -r -d '' VCAP_SERVICES <<EOF
{
  "user-provided": [
    {
      "credentials":  {
        "uri": "amqp://rabbitmq:5672/%2F",
        "oauth_client": {
          "client_id": "$CLIENT_ID",
          "client_secret": "$CLIENT_SECRET",
          "auth_domain": "http://uaa:8080/uaa"
        }
      },
      "instance_name": "rmq",
      "label": "rabbitmq-oauth",
      "name": "rmq"
    }
  ]
}
EOF

docker network inspect rabbitmq_net >/dev/null 2>&1 || docker network create rabbitmq_net
docker rm -f spring-demo-oauth 2>/dev/null || echo "spring-demo-oauth was not running"

echo "Launching demo-oauth-rabbitmq with client_id $CLIENT_ID simulating CloudFoundry environment "
docker run -d --rm \
		--network rabbitmq_net \
		--name spring-demo-oauth \
		-v $PWD/demo-oauth-rabbitmq/target:/app \
		-e "SPRING_PROFILES_ACTIVE=Cloud" \
		-e "VCAP_APPLICATION='{\"application_name\":spring-demo-oauth}'" \
		-e "VCAP_SERVICES=$VCAP_SERVICES" \
		-p 8081:8080 \
		openjdk:8-jdk \
		java -jar /app/demo-oauth-rabbitmq-0.0.1-SNAPSHOT.jar
